name: CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

env:
  DATABASE_URL: postgres://postgres:postgres@localhost:5432/test

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - node-version: 18.18.0
            prisma-version: 4.9.0
          - node-version: 18.18.0
            prisma-version: 4.16.0
          - node-version: 18.18.0
            prisma-version: latest
          - node-version: lts/*
            prisma-version: latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"

      - run: yarn add prisma@${{ matrix.prisma-version }} @prisma/client@${{ matrix.prisma-version }}
      - run: yarn install
      
      # Set schema flag for older Prisma versions
      - name: Set schema path
        id: set-schema
        run: |
          if [[ "${{ matrix.prisma-version }}" == "4.9.0" || "${{ matrix.prisma-version }}" == "4.16.0" ]]; then
            echo "schema=--schema ./prisma/schema-4-9-0.prisma" >> $GITHUB_OUTPUT
          else
            echo "schema=" >> $GITHUB_OUTPUT
          fi
      - run: yarn prisma generate ${{ steps.set-schema.outputs.schema }}
      - run: yarn prisma db push ${{ steps.set-schema.outputs.schema }}

      - run: yarn build
      - run: yarn test
